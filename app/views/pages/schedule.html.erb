<div class="container mt-5">
	<div class="row justify-content-center">
		<div class="col-md-12">
			<h1 class="h4 text-center">Schedule your inspection</h1>
		</div>
		<div class="col-md-8 mt-5">
		  <%= form_for(@address, html: {id: "get-it", autocomplete: "off"}) do |form| %>
        <div class="input-group" id="pac-container">
          <input id="pac-input" class="input-icon form-control input-lg" placeholder="Enter your address" type="text" name="address[long_address]" autocomplete="off" style="background-color: white" required>
          <%= form.hidden_field :latitude, id: "latInput" %>
          <%= form.hidden_field :longitude, id: "lngInput" %>
          <span class="input-group-append">
            <input type="submit" name="commit" value="Get Started" id="address_submit" class="btn btn-lg btn-success box-shadow-success">
          </span>
        </div>
      <% end %>
      <div id="map" style="height: 300px; width: 100%"></div>
		</div>
	</div>
</div>

<script>
  function initMap() {
    var map = new google.maps.Map(document.getElementById('map'), {
      center: {lat: 40.1302, lng: -111.5785},
      zoom: 12
    });
    // var card = document.getElementById('pac-card');
    var input = document.getElementById('pac-input');
    // var types = document.getElementById('type-selector');
    // var strictBounds = document.getElementById('strict-bounds-selector');

    // map.controls[google.maps.ControlPosition.TOP_RIGHT].push(card);

    var autocomplete = new google.maps.places.Autocomplete(input);
    var latInput = document.getElementById('latInput');
    var lngInput = document.getElementById('lngInput');

    // Bind the map's bounds (viewport) property to the autocomplete object,
    // so that the autocomplete requests use the current map bounds for the
    // bounds option in the request.
    // autocomplete.bindTo('bounds', map);

    // Set the data fields to return when the user selects a place.
    // autocomplete.setFields(
    //     ['address_components', 'geometry', 'icon', 'name']);

    // var infowindow = new google.maps.InfoWindow();
    // var infowindowContent = document.getElementById('infowindow-content');
    // infowindow.setContent(infowindowContent);
    var marker = new google.maps.Marker({
      map: map,
      anchorPoint: new google.maps.Point(0, -29)
    });

    autocomplete.addListener('place_changed', function() {
      // infowindow.close();
      marker.setVisible(true);
      var place = autocomplete.getPlace();
      latInput.value = place.geometry.location.lat();
      lngInput.value = place.geometry.location.lng();
      if (!place.geometry) {
        // User entered the name of a Place that was not suggested and
        // pressed the Enter key, or the Place Details request failed.
        window.alert("No details available for input: '" + place.name + "'");
        return;
      }

      // If the place has a geometry, then present it on a map.
      // if (place.geometry.viewport) {
      //   map.fitBounds(place.geometry.viewport);
      // } else {
      //   map.setCenter(place.geometry.location);
      //   map.setZoom(17);  // Why 17? Because it looks good.
      // }
      // marker.setPosition(place.geometry.location);
      // marker.setVisible(true);

      // var address = '';
      // if (place.address_components) {
      //   address = [
      //     (place.address_components[0] && place.address_components[0].short_name || ''),
      //     (place.address_components[1] && place.address_components[1].short_name || ''),
      //     (place.address_components[2] && place.address_components[2].short_name || '')
      //   ].join(' ');
      // }
    });
  }

  var form = document.getElementById('get-it');
  form.addEventListener('submit', function(event) {
    event.preventDefault();
    if (document.getElementById('latInput').value === "" || document.getElementById('lngInput').value === "") {
      document.getElementById('form-error').classList.remove('d-none');
      document.getElementById('address_submit').disabled = false;
      return;
    }
    form.submit();
  })
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyARQ8k0F667JhDrekyvRKA_NhDrVei3rGI&libraries=places&callback=initMap"
    async defer></script>
